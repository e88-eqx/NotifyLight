Prompt 1.1: Project Structure & Basic Server
Goal: Create the initial project structure and basic Express server with API key authentication.
Requirements:

Single POST /notify endpoint that logs payload and returns success
API key validation middleware (401 if missing/invalid)
Docker-ready setup
Server runs on PORT env var (default: 3000)
Basic CORS configuration
Health metrics endpoint

Deliverables:

Project directory structure
package.json (minimal deps: express, cors, express-rate-limit)
src/server.js with:

Express app initialization with CORS
API key middleware for protected routes
Basic /notify endpoint
Health check endpoint GET /health with uptime and memory usage
Rate limiting (100 requests per minute per IP)


.env.example with API_KEY, PORT, and CORS_ORIGIN
Dockerfile (multi-stage build for smaller image)
docker-compose.yml with env vars
.gitignore for Node.js projects

Security Setup:
javascript// CORS configuration
const corsOptions = {
  origin: process.env.CORS_ORIGIN || '*',
  methods: ['GET', 'POST'],
  allowedHeaders: ['Content-Type', 'X-API-Key']
};

// Rate limiting
const limiter = rateLimit({
  windowMs: 1 * 60 * 1000, // 1 minute
  max: 100 // limit each IP to 100 requests per windowMs
});
Testing: Provide exact curl commands to test auth, rate limiting, and health endpoint.